[{"/Users/karacaputo/turing/3module/covid_comparisons/src/index.tsx":"1","/Users/karacaputo/turing/3module/covid_comparisons/src/App/App.tsx":"2","/Users/karacaputo/turing/3module/covid_comparisons/src/apiCalls.tsx":"3","/Users/karacaputo/turing/3module/covid_comparisons/src/comparisonData.tsx":"4","/Users/karacaputo/turing/3module/covid_comparisons/src/USAState/USAState.tsx":"5","/Users/karacaputo/turing/3module/covid_comparisons/src/Stat/Stat.tsx":"6","/Users/karacaputo/turing/3module/covid_comparisons/src/ComparisonContainer/ComparisonContainer.tsx":"7","/Users/karacaputo/turing/3module/covid_comparisons/src/ComparisonDetails/ComparisonDetails.tsx":"8","/Users/karacaputo/turing/3module/covid_comparisons/src/ComparisonCard/ComparisonCard.tsx":"9"},{"size":280,"mtime":1610232598072,"results":"10","hashOfConfig":"11"},{"size":7679,"mtime":1610422341683,"results":"12","hashOfConfig":"11"},{"size":601,"mtime":1610053584082,"results":"13","hashOfConfig":"11"},{"size":2054,"mtime":1610422341684,"results":"14","hashOfConfig":"11"},{"size":354,"mtime":1610068395853,"results":"15","hashOfConfig":"11"},{"size":470,"mtime":1610068395852,"results":"16","hashOfConfig":"11"},{"size":2240,"mtime":1610402230142,"results":"17","hashOfConfig":"11"},{"size":3066,"mtime":1610422341684,"results":"18","hashOfConfig":"11"},{"size":537,"mtime":1610462840500,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"118sn6p",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/karacaputo/turing/3module/covid_comparisons/src/index.tsx",[],["41","42"],"/Users/karacaputo/turing/3module/covid_comparisons/src/App/App.tsx",[],"/Users/karacaputo/turing/3module/covid_comparisons/src/apiCalls.tsx",[],"/Users/karacaputo/turing/3module/covid_comparisons/src/comparisonData.tsx",[],"/Users/karacaputo/turing/3module/covid_comparisons/src/USAState/USAState.tsx",["43"],"import './USAState.scss';\n\nconst USAState = (prop: { date?: string }) => {\n  return(\n    <section>\n      <section className='title-info'>\n        <h1 className='state-image'></h1>\n        <h2 className='state-name'>Colorado</h2>\n      </section>\n      <h3 className='date'>Information for { prop.date }</h3>\n    </section>\n  )\n}\n\nexport default USAState;","/Users/karacaputo/turing/3module/covid_comparisons/src/Stat/Stat.tsx",[],"/Users/karacaputo/turing/3module/covid_comparisons/src/ComparisonContainer/ComparisonContainer.tsx",[],"/Users/karacaputo/turing/3module/covid_comparisons/src/ComparisonDetails/ComparisonDetails.tsx",["44"],"import React, { useState } from 'react';\nimport ComparisonCard from '../ComparisonCard/ComparisonCard';\nimport './ComparisonDetails.scss';\nimport { Comparison } from '../comparisonData';\nimport { GiJigsawBox } from 'react-icons/gi';\n\nconst ComparisonDetails = (prop: { selection?: Comparison, usaStateDeaths: number, totalUSADeaths: number }) => {\n  const [deathIcons, setDeathIcons] = useState<any>([])\n\n  const convertDeaths = (numDeaths: number): JSX.Element[] => {\n    let deathConversion = Math.floor(numDeaths/100)\n    let arrayLength = deathConversion\n    return displayDeaths(deathConversion, arrayLength)\n  }\n  \n  const displayDeaths = (deathConversion: number, arrayLength: number): JSX.Element[] => { \n    if (deathConversion >= 0 && deathIcons.length < arrayLength) {\n      let newIcon: JSX.Element = <p key={`${deathConversion}`}>X</p>\n      deathIcons.push(newIcon)\n      setDeathIcons(deathIcons)\n\n      return displayDeaths(deathConversion - 1, arrayLength)\n    }\n    return deathIcons\n  }\n  \n  const compareStateDeathsToUSADeaths = () => {\n    let percentOfAllUSADeaths = prop.usaStateDeaths / prop.totalUSADeaths;\n    return (\n      <p>The number of deaths due to COVID-19 in the state of Colorado account\n        for { (percentOfAllUSADeaths * 100).toFixed(1) }% of all deaths in the United States.</p>\n    )\n  }\n\n  const calculateDeathRatio = () => {\n    if (typeof prop.selection?.data.deaths === 'number') {\n      let deathRatio = (prop.usaStateDeaths / prop.selection.data.deaths)\n      return generateComparisonText(deathRatio)\n    } \n    return 'Sorry no data available at this time.'\n  }\n\n  const generateComparisonText = (deathRatio: number): JSX.Element => {\n    if(deathRatio < 1) {\n      return(\n        <section className='comparison-text'>\n          <p>Despite the staggering number of COVID-19 deaths in 2020, COVID-19 \n            deaths are only equivalent to { (deathRatio).toFixed(1) }% of all &nbsp;\n            {prop.selection?.data.title} deaths in all of the United States.\n          </p> \n        </section>\n      )\n    } else {\n      return(\n        <section className='comparison-text'>\n          <p>The number of COVID-19 deaths in Colorado is equivalent to { deathRatio.toFixed(1) } times the \n            number of all { prop.selection?.data.title }. \n          </p> \n        </section>\n      )\n    }\n  }\n\n  return(\n    <section className='main'>\n      <ComparisonCard\n        title={`${ prop.selection?.data.subtitle } saw ${prop.selection?.data.deaths} deaths.`}\n        body={convertDeaths(prop.usaStateDeaths)}\n        styleId='usa-total-deaths'\n        key='1'\n      />\n      <h2 id='page-title'>COVID-19 deaths compared to {prop.selection?.data.title}</h2>\n      <section>\n        <section>\n          <p></p>\n        </section>\n        <section>\n          <p>This is compared to {prop.usaStateDeaths } deaths in Colorado to date.</p>\n        </section>\n      </section>\n      <p>{ calculateDeathRatio() }</p>\n      <p>{ compareStateDeathsToUSADeaths() }</p>\n    </section>\n  )\n}\nexport default ComparisonDetails;\n","/Users/karacaputo/turing/3module/covid_comparisons/src/ComparisonCard/ComparisonCard.tsx",["45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":7,"column":9,"nodeType":"52","endLine":7,"endColumn":37},{"ruleId":"53","severity":1,"message":"54","line":5,"column":10,"nodeType":"55","messageId":"56","endLine":5,"endColumn":21},{"ruleId":"53","severity":1,"message":"57","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":20},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'GiJigsawBox' is defined but never used.","Identifier","unusedVar","'Comparison' is defined but never used.","no-global-assign","no-unsafe-negation"]