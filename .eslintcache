[{"/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/index.tsx":"1","/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/App/App.tsx":"2","/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/apiCalls.tsx":"3","/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/USAState/USAState.tsx":"4","/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/ComparisonContainer/ComparisonContainer.tsx":"5","/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/comparisonData.tsx":"6","/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/Stat/Stat.tsx":"7","/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/ComparisonDetails/ComparisonDetails.tsx":"8","/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/ComparisonCard/ComparisonCard.tsx":"9","/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/utilities/utilities.tsx":"10"},{"size":280,"mtime":1610221939403,"results":"11","hashOfConfig":"12"},{"size":7232,"mtime":1610477431653,"results":"13","hashOfConfig":"12"},{"size":601,"mtime":1609991284649,"results":"14","hashOfConfig":"12"},{"size":354,"mtime":1610068844244,"results":"15","hashOfConfig":"12"},{"size":2240,"mtime":1610335105530,"results":"16","hashOfConfig":"12"},{"size":2054,"mtime":1610471353992,"results":"17","hashOfConfig":"12"},{"size":480,"mtime":1610474496100,"results":"18","hashOfConfig":"12"},{"size":4021,"mtime":1610477431654,"results":"19","hashOfConfig":"12"},{"size":723,"mtime":1610476203474,"results":"20","hashOfConfig":"12"},{"size":905,"mtime":1610471353994,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ejpgsq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/index.tsx",[],["45","46"],"/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/App/App.tsx",[],"/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/apiCalls.tsx",[],"/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/USAState/USAState.tsx",["47"],"import './USAState.scss';\n\nconst USAState = (prop: { date?: string }) => {\n  return(\n    <section>\n      <section className='title-info'>\n        <h1 className='state-image'></h1>\n        <h2 className='state-name'>Colorado</h2>\n      </section>\n      <h3 className='date'>Information for { prop.date }</h3>\n    </section>\n  )\n}\n\nexport default USAState;","/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/ComparisonContainer/ComparisonContainer.tsx",[],"/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/comparisonData.tsx",[],"/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/Stat/Stat.tsx",[],"/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/ComparisonDetails/ComparisonDetails.tsx",["48","49"],"import React, { useEffect, useState } from 'react';\nimport ComparisonCard from '../ComparisonCard/ComparisonCard';\nimport './ComparisonDetails.scss';\nimport { Comparison } from '../comparisonData';\nimport { FaMale } from 'react-icons/fa';\n\nconst ComparisonDetails = (prop: { selection?: Comparison, usaStateDeaths: number, totalUSADeaths: number }) => {\n  const [stateDeathIcons] = useState<any>([])\n  const [comparisonDeathIcons, setComparisonDeathIcons] = useState<any>([])\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  })\n\n  useEffect(() => {\n    setComparisonDeathIcons([])\n    convertDeaths(comparisonDeathIcons, Number(prop.selection?.data.deaths))\n  }, [Number(prop.selection?.data.deaths)])\n\n const convertDeaths = (conversion: JSX.Element[], numDeaths: number): JSX.Element[] => {\n    let deathConversion = Math.floor(numDeaths/100)\n    let arrayLength = deathConversion\n    return displayDeaths(conversion, deathConversion, arrayLength)\n  }\n  \n  const displayDeaths = (conversion: JSX.Element[], deathConversion: number, arrayLength: number): JSX.Element[] => { \n    if (deathConversion >= 0 && conversion.length < arrayLength) {\n      let newIcon: JSX.Element = <p className='people-icon' key={`${deathConversion}`}><FaMale size={20}/></p>\n      conversion.push(newIcon)\n\n      return displayDeaths(conversion, deathConversion - 1, arrayLength)\n    }\n    return conversion\n  }\n\n  \n  const compareStateDeathsToUSADeaths = () => {\n    let percentOfAllUSADeaths = prop.usaStateDeaths / prop.totalUSADeaths;\n    return (\n      <p>The number of deaths due to COVID-19 in the state of Colorado account\n        for <span className='comparison-nums'>{ (percentOfAllUSADeaths * 100).toFixed(1) }%</span> of all deaths in the United States.\n      </p>\n    )\n  }\n\n  const calculateDeathRatio = () => {\n    if (typeof prop.selection?.data.deaths === 'number') {\n      let deathRatio = (prop.usaStateDeaths / prop.selection.data.deaths)\n      return generateComparisonText(deathRatio)\n    } \n    return <p>Sorry no data available at this time.</p>\n  }\n\n  const generateComparisonText = (deathRatio: number): JSX.Element => {\n    if(deathRatio < 1) {\n      return(\n        <section>\n          <p className='comparison-text'>Despite the staggering number of COVID-19 deaths in 2020, COVID-19 \n            deaths are only equivalent to <span className='comparison-nums'>{ (deathRatio).toFixed(1) }%</span> of all &nbsp;\n            {prop.selection?.data.title} deaths in all of the United States.\n          </p> \n        </section>\n      )\n    } else {\n      return(\n        <section>\n          <p className='comparison-text'>The number of COVID-19 deaths in Colorado is equivalent to <span className='comparison-nums'>{ deathRatio.toFixed(1) }</span> times the \n            number of all { prop.selection?.data.title }. \n          </p> \n        </section>\n      )\n    }\n  }\n\n  return(\n    <section>\n        <h1 className='key'><FaMale size={20}/> = 100 Deaths</h1>\n        <section className='main'>\n          <ComparisonCard\n            title={`${ prop.selection?.data.subtitle } saw ${prop.selection?.data.deaths} deaths.`}\n            body={convertDeaths(comparisonDeathIcons, Number(prop.selection?.data.deaths))}\n            styleId='usa-total-deaths'\n            source={String(prop.selection?.data.source)}\n            key='1'\n          />\n          <ComparisonCard\n            title={`This is compared to ${prop.usaStateDeaths } deaths in Colorado to date.`}\n            body={convertDeaths(stateDeathIcons, prop.usaStateDeaths)}\n            styleId='usa-total-deaths'\n            source='https://api.covidtracking.com/'\n            key='2'\n          />\n          <ComparisonCard\n            text={calculateDeathRatio()}\n            styleId='usa-total-deaths'\n            key='3'\n          />\n          <ComparisonCard\n            text={compareStateDeathsToUSADeaths()}\n            styleId='usa-total-deaths'\n            key='4'\n          />\n      </section>\n    </section>\n  )\n}\nexport default ComparisonDetails;\n","/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/ComparisonCard/ComparisonCard.tsx",[],"/Users/alyssabull/Turing/mod3/projects/covid_comparisons/src/utilities/utilities.tsx",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":7,"column":9,"nodeType":"56","endLine":7,"endColumn":37},{"ruleId":"57","severity":1,"message":"58","line":14,"column":6,"nodeType":"59","endLine":14,"endColumn":43,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":14,"column":7,"nodeType":"62","endLine":14,"endColumn":42},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'comparisonDeathIcons', 'convertDeaths', and 'prop.selection?.data.deaths'. Either include them or remove the dependency array.","ArrayExpression",["65"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [comparisonDeathIcons, convertDeaths, prop.selection?.data.deaths]",{"range":"68","text":"69"},[611,648],"[comparisonDeathIcons, convertDeaths, prop.selection?.data.deaths]"]